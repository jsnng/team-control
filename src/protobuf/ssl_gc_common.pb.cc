// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ssl_gc_common.proto
// Protobuf C++ Version: 5.27.1

#include "ssl_gc_common.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr RobotId::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_{0u},
        team_{static_cast< ::Team >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR RobotId::RobotId(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RobotIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RobotIdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RobotIdDefaultTypeInternal() {}
  union {
    RobotId _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RobotIdDefaultTypeInternal _RobotId_default_instance_;
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_ssl_5fgc_5fcommon_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ssl_5fgc_5fcommon_2eproto = nullptr;
const ::uint32_t
    TableStruct_ssl_5fgc_5fcommon_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::RobotId, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RobotId, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RobotId, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::RobotId, _impl_.team_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::RobotId)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_RobotId_default_instance_._instance,
};
const char descriptor_table_protodef_ssl_5fgc_5fcommon_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\023ssl_gc_common.proto\"*\n\007RobotId\022\n\n\002id\030\001"
    " \001(\r\022\023\n\004team\030\002 \001(\0162\005.Team*)\n\004Team\022\013\n\007UNK"
    "NOWN\020\000\022\n\n\006YELLOW\020\001\022\010\n\004BLUE\020\002*1\n\010Division"
    "\022\017\n\013DIV_UNKNOWN\020\000\022\t\n\005DIV_A\020\001\022\t\n\005DIV_B\020\002B"
    "8Z6github.com/RoboCup-SSL/ssl-simulation"
    "-protocol/pkg/sim"
};
static ::absl::once_flag descriptor_table_ssl_5fgc_5fcommon_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_ssl_5fgc_5fcommon_2eproto = {
    false,
    false,
    217,
    descriptor_table_protodef_ssl_5fgc_5fcommon_2eproto,
    "ssl_gc_common.proto",
    &descriptor_table_ssl_5fgc_5fcommon_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_ssl_5fgc_5fcommon_2eproto::offsets,
    file_level_enum_descriptors_ssl_5fgc_5fcommon_2eproto,
    file_level_service_descriptors_ssl_5fgc_5fcommon_2eproto,
};
const ::google::protobuf::EnumDescriptor* Team_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ssl_5fgc_5fcommon_2eproto);
  return file_level_enum_descriptors_ssl_5fgc_5fcommon_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Team_internal_data_[] = {
    196608u, 0u, };
bool Team_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* Division_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ssl_5fgc_5fcommon_2eproto);
  return file_level_enum_descriptors_ssl_5fgc_5fcommon_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t Division_internal_data_[] = {
    196608u, 0u, };
bool Division_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class RobotId::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RobotId>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RobotId, _impl_._has_bits_);
};

RobotId::RobotId(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RobotId)
}
RobotId::RobotId(
    ::google::protobuf::Arena* arena, const RobotId& from)
    : RobotId(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RobotId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RobotId::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, team_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::team_));
}
RobotId::~RobotId() {
  // @@protoc_insertion_point(destructor:RobotId)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RobotId::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RobotId::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(RobotId, _impl_._cached_size_),
              false,
          },
          &RobotId::MergeImpl,
          &RobotId::kDescriptorMethods,
          &descriptor_table_ssl_5fgc_5fcommon_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> RobotId::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RobotId, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RobotId_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RobotId>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .Team team = 2;
    {::_pbi::TcParser::FastEr0S1,
     {16, 1, 2, PROTOBUF_FIELD_OFFSET(RobotId, _impl_.team_)}},
    // optional uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RobotId, _impl_.id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(RobotId, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(RobotId, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .Team team = 2;
    {PROTOBUF_FIELD_OFFSET(RobotId, _impl_.team_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {0, 3},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RobotId::Clear() {
// @@protoc_insertion_point(message_clear_start:RobotId)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.team_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.team_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* RobotId::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RobotId)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  // optional .Team team = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_team(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RobotId)
  return target;
}

::size_t RobotId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RobotId)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_id());
    }

    // optional .Team team = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_team());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RobotId::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RobotId*>(&to_msg);
  auto& from = static_cast<const RobotId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RobotId)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.id_ = from._impl_.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.team_ = from._impl_.team_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RobotId::CopyFrom(const RobotId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RobotId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RobotId::InternalSwap(RobotId* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RobotId, _impl_.team_)
      + sizeof(RobotId::_impl_.team_)
      - PROTOBUF_FIELD_OFFSET(RobotId, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata RobotId::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_ssl_5fgc_5fcommon_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
